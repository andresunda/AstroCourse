---
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response";

import PokemonCard from "../../components/pokemons/PokemonCard.astro";
import MainLayout from "../../layouts/MainLayout.astro";
import Title from "@components/pokemons/shared/Title.astro";

export const getStaticPaths = (async ({ paginate }) => {
	const respuesta = await fetch(
		"https://pokeapi.co/api/v2/pokemon?limit=151",
	);

	//const data = (await respuesta.json()) as PokemonListResponse;
	//Destructuramos data directamente a la prop results
	const { results } = (await respuesta.json()) as PokemonListResponse;

	return paginate(results, { pageSize: 20 });
}) satisfies GetStaticPaths;

//console.table(`data ${data}`);
const title = "Pokemon Static | Home ";
const { page } = Astro.props;
console.log(page);

console.log(page.url.prev);
---

<MainLayout title={title}>
	<Title>Listado paginado</Title>
	<section
		aria-label="Listado de Pokemons"
		class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mt-5"
	>
		{
			page.data.map((pokemon) => (
				<PokemonCard name={pokemon?.name} url={pokemon?.url} />
			))
		}
	</section>

	<section class="flex mt-10 gap-2 items-center">
		<a
			class:list={[
				"btn",
				{
					disabled: !page.url.prev,
				},
			]}
			href={page.url.prev}
		>
			Anterior
		</a>

		<a
			class:list={[
				"btn",
				{
					disabled: !page.url.next,
				},
			]}
			href={page.url.next}>Siguiente</a
		>

		<div class="flex flex-1"></div>

		<span class="text-3xl font-bold">PÃ¡gina {page?.currentPage}</span>
	</section>
</MainLayout>

<style>
	.btn {
		@apply bg-blue-500 p-2  text-white rounded-md;
		@apply cursor-pointer;
	}
	.disabled {
		@apply bg-gray-600 text-gray-400;
	}
</style>
